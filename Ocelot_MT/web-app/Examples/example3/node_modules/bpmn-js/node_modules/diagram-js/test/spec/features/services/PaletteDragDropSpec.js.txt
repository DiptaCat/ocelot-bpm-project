'use strict';

var TestHelper = require('../../../TestHelper');

/* global bootstrapDiagram, inject */

var PaletteDragDrop = require('../../../../lib/features/services/PaletteDragDrop');
var Events = require('../../../../lib/core/EventBus');



describe('PaletteDragDrop should ', function() {
  'use strict';

  var pdd,
      mockEvents,
      canvas;

  beforeEach(bootstrapDiagram(function() {
    mockEvents = new Events();

    var listeners = {};

    canvas = {
      getPaper: function() {
        return {
          node: {
            addEventListener: function(lname, listener) {
              listeners[lname] = listener;
            }
          }
        };
      }
    };

    canvas.listeners = listeners;

    pdd = new PaletteDragDrop(canvas, mockEvents, 'elementRegistry');

    return {
      events: mockEvents,
      pdd: pdd,
      canvas: canvas
    };
  }));

  it('have listeners registered on init', function() {
    mockEvents.fire('standard.palette.init');
    expect(canvas.listeners.mousemove).toBeDefined();
    expect(canvas.listeners.mouseup).toBeDefined();
  });

  it('set drag status ', function() {
    pdd.startDragAndDrop();
    expect(pdd.isDragInProgress()).toBeTruthy();
  });

});